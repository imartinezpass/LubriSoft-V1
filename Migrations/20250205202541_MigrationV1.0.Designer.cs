// <auto-generated />
using System;
using LubriSoft.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LubriSoft.Migrations
{
    [DbContext(typeof(LubriSoftDataContext))]
    [Migration("20250205202541_MigrationV1.0")]
    partial class MigrationV10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LubriSoft.Entities.Aceite", b =>
                {
                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nombreCompleto");

                    b.Property<string>("MarcaId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("marca");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Norma")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("norma");

                    b.HasKey("NombreCompleto");

                    b.HasIndex("MarcaId");

                    b.ToTable("aceites");
                });

            modelBuilder.Entity("LubriSoft.Entities.Cliente", b =>
                {
                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Telefono");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("LubriSoft.Entities.Fabricante", b =>
                {
                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Nombre");

                    b.ToTable("fabricantes");
                });

            modelBuilder.Entity("LubriSoft.Entities.Marca", b =>
                {
                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Nombre");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("LubriSoft.Entities.Mecanica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("detalle");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<int>("KilometrajeActual")
                        .HasColumnType("int")
                        .HasColumnName("kmActual");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("patente");

                    b.Property<string>("TipoTrabajo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.HasIndex("Patente");

                    b.ToTable("mecanica");
                });

            modelBuilder.Entity("LubriSoft.Entities.Modelo", b =>
                {
                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("FabricanteId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fabricante");

                    b.HasKey("Nombre");

                    b.HasIndex("FabricanteId");

                    b.ToTable("modelos");
                });

            modelBuilder.Entity("LubriSoft.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AceiteId")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("aceite");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<string>("FiltroAceite")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("filtroAceite");

                    b.Property<string>("FiltroAire")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("filtroAire");

                    b.Property<string>("FiltroCombustible")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("filtroCombustible");

                    b.Property<string>("FiltroHabitaculo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("filtroHabitaculo");

                    b.Property<int>("KilometrajeActual")
                        .HasColumnType("int")
                        .HasColumnName("kmActual");

                    b.Property<int>("KilometrajeProximo")
                        .HasColumnType("int")
                        .HasColumnName("kmProximo");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("observaciones");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("patente");

                    b.HasKey("Id");

                    b.HasIndex("AceiteId");

                    b.HasIndex("Patente");

                    b.ToTable("service");
                });

            modelBuilder.Entity("LubriSoft.Entities.Vehiculo", b =>
                {
                    b.Property<string>("Patente")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("patente");

                    b.Property<string>("CapacidadCaja")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("capacidadCaja");

                    b.Property<string>("CapacidadMotor")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("capacidadMotor");

                    b.Property<string>("ClienteId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("clienteId");

                    b.Property<string>("FabricanteId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fabricante");

                    b.Property<string>("ModeloId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modelo");

                    b.Property<string>("Version")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("version");

                    b.HasKey("Patente");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("ModeloId");

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("LubriSoft.Entities.Aceite", b =>
                {
                    b.HasOne("LubriSoft.Entities.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("LubriSoft.Entities.Mecanica", b =>
                {
                    b.HasOne("LubriSoft.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Patente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("LubriSoft.Entities.Modelo", b =>
                {
                    b.HasOne("LubriSoft.Entities.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("LubriSoft.Entities.Service", b =>
                {
                    b.HasOne("LubriSoft.Entities.Aceite", "Aceite")
                        .WithMany()
                        .HasForeignKey("AceiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LubriSoft.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Patente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aceite");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("LubriSoft.Entities.Vehiculo", b =>
                {
                    b.HasOne("LubriSoft.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LubriSoft.Entities.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LubriSoft.Entities.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Fabricante");

                    b.Navigation("Modelo");
                });
#pragma warning restore 612, 618
        }
    }
}
